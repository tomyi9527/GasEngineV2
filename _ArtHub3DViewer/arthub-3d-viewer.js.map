{"version":3,"sources":["webpack://GasEngine/./src/ArtHubBase.js","webpack://GasEngine/./src/ArtHubEnvironmetalLight.js","webpack://GasEngine/./src/Util.js","webpack://GasEngine/./src/ArtHubSkybox.js","webpack://GasEngine/./src/ArtHubMesh.js","webpack://GasEngine/./src/ArtHubMaterial.js","webpack://GasEngine/./src/ArtHubKeyframeAnimation.js","webpack://GasEngine/./src/ArtHubModel.js","webpack://GasEngine/./src/ArtHubScene.js","webpack://GasEngine/./src/ArtHubRenderer.js","webpack://GasEngine/./src/ArtHub3DViewer.js","webpack://GasEngine/./src/index.js","webpack://GasEngine/webpack/bootstrap","webpack://GasEngine/webpack/startup","webpack://GasEngine/webpack/runtime/define property getters","webpack://GasEngine/webpack/runtime/hasOwnProperty shorthand"],"names":["options","this","_iframe","iframe","_name","name","_id","id","_parentEntityId","parentEntityId","_callbacks","Map","cmd","parameters","window","invokeID","contentWindow","postMessage","Promise","rs","rj","timer","setTimeout","removeEventListener","messageHandler","event","data","clearTimeout","addEventListener","_callbackIFrame","func","get","length","undefined","Array","isArray","forEach","f","callbackName","callbackFunction","has","existCallBackFunction","push","set","delete","_callbackHandlerAdaptor","bind","clear","BackgroundList","url","EnvironmentIntensity","super","params","_invokeIFrame","percent","value","Math","round","then","res","intensity","_getPercentByIntensityValue","environmentObj","find","e","environmentName","orientation","_getPercentByOrientationValue","_setEnvironment","intensityValue","_getIntensityValueByPercent","_setBackground","lightBrightness","orientValue","_getOrientationValueByPercent","rootDirectory","backgroundList","resolve","color2RGB","color","sColor","toLowerCase","test","sColorNew","i","slice","concat","sColorChange","parseInt","RGB2Color","colorObj","r","g","b","hex","Number","toString","BackgroundImageList","EnvironmentBrightness","environmentBrightness","_getPercentByEnvironmentBrightnessValue","backgroundImageObj","backgroundImage","backgroundColor","type","colorArray","cubeMapName","lightEnable","brightnessValue","_getEnvironmentBrightnessValueByPercent","environmentBlur","imageList","visible","uvData","additionalDielectricMaterialFields","additionalElectricMaterialFields","FirstLetterToUpperCase","str","charAt","toUpperCase","allMapFields","_type","_invokeFunctionField","_materialContexts","activeMaterialType","setMaterialContext","field","catch","console","log","_invokeGetField","_invokeSetField","albedoMapName","specularMapName","metalnessMapName","specularF0MapName","roughnessMapName","glossinessMapName","normalMapName","aoMapName","cavityMapName","opacityMapName","emissiveMapName","all","typeName","_activeContext","_albedoMapName","_specularMapName","_metalnessMapName","_specularF0MapName","_roughnessMapName","_normalMapName","_aoMapName","_cavityMapName","_opacityMapName","_emissiveMapName","info","updateNames","_appendAdditionalFieldsToInfo","getMaterialInfo","materialInfo","fieldsTable","key","callbacks","appendFields","pathes","result","duration","startFraction","startValue","highlightMaskEnable","that","timing","draw","start","performance","now","requestAnimationFrame","animate","time","timeFraction","progress","x","min","max","y","highlightMaskAlpha","path","extractTextureLinkFromInfo","matchedFields","map","materialTypes","types","promises","values","ret","_meshList","_materialList","_animationClips","modelInfo","meshList","mesh","materials","material","clips","animationClips","v","init","index","findIndex","clip","clipId","splice","getTextureLinkByPath","s","_model","getScene","root","getModelRoot","animatorComponent","getComponent","addCallback","MessageType","FileLoaded","param","count","total","takeoutClips","setAnimationClip","getName","new_root","setModelRoot","onAnimationLoaded","_environmentalLight","_skybox","_modelList","addEventHandler","removeEventHandler","reject","removeCallback","setModelList","model","models","textureList","textureInfo","textureNames","getModelList","RenderModeList","SkeletonSale","scale","flag","alpha","showTopology","scaleValue","_getScaleByPercent","mode","renderModeObj","renderMode","wireframeColor","wireframeOpacity","wireframeEnable","skelentorScale","_getPercentByScale","ArtHub3DViewer","container","baseUrl","_container","_baseUrl","_getBaseURL","pathName","location","pathname","startsWith","endsWith","pathArr","split","depotName","host","document","createElement","style","borderWidth","width","height","_createIframe","appendChild","removeChild","isSaveEnabled","src","_getIframeSrc","success","_renderer","initIncrementalSaver","_scene","scene","state","Error","message","ArtHubWebSDK","ModelViewer","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"arthub-3d-viewer.js","sourcesContent":["\nclass ArtHubBase {\n    constructor(options = {}) {\n        this._iframe = options.iframe;\n        this._name = options.name;\n        this._id = options.id;\n        this._parentEntityId = options.parentEntityId;\n        \n        this._callbacks = new Map();\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get parentEntityId() {\n        return this._parentEntityId;\n    }\n\n    _invokeIFrame(cmd, parameters) {\n        if(this._iframe) {\n            window.invokeID += 1;\n            let invokeID = window.invokeID;\n\n            this._iframe.contentWindow.postMessage({ invokeID, cmd, parameters }, '*');\n\n            return new Promise((rs, rj) => {\n                    const timeoutHandler = function () {\n                        window.removeEventListener('message', messageHandler);\n                        rj({ invokeID, cmd });\n                    };\n                    const timer = setTimeout(timeoutHandler, 200000);  // TODO(beanpliu): 后续找个方案控制较长的promise问题\n        \n                    const messageHandler = function (event) {\n                        if (event.data.invokeID === invokeID && event.data.cmd === cmd) {\n                            // console.log(event.data);\n                            window.removeEventListener('message', messageHandler);\n                            clearTimeout(timer);\n                            rs(event.data.parameters);\n                        }\n                    };\n                    window.addEventListener('message', messageHandler, false);\n                });\n        }\n    }\n\n    _callbackHandlerAdaptor(event) {\n        if (event.data.invokeID === -1) {\n            this._callbackIFrame(event.data.cmd, event.data.parameters);\n        }\n    }\n\n    _callbackIFrame(cmd, parameters) {\n        const func = this._callbacks.get(cmd);\n        if (cmd && cmd.length > 0 && func !== undefined) {\n            if(Array.isArray(func)) {\n                func.forEach(f => f(parameters));\n            } else {\n                func(parameters);\n            }\n        }\n    }\n    \n    addCallback(callbackName, callbackFunction) {\n        if (this._callbacks && callbackName && callbackFunction) {\n            if(this._callbacks.has(callbackName)) {\n                const existCallBackFunction = this._callbacks.get(callbackName);\n                if(Array.isArray(existCallBackFunction)) {\n                    existCallBackFunction.push(callbackFunction);\n                } else {\n                    this._callbacks.set(callbackName, [existCallBackFunction, callbackFunction]);\n                }\n            } else {\n                this._callbacks.set(callbackName, callbackFunction);\n            }\n        }\n    }\n\n    removeCallback(callbackName) {\n        if (this._callbacks && callbackName) {\n          this._callbacks.delete(callbackName);\n        }\n    }\n\n    addEventHandler() {\n        window.addEventListener(\n            'message',\n            this._callbackHandlerAdaptor.bind(this),\n            false\n        );\n    }\n\n    removeEventHandler() {\n        window.removeEventListener(\n            'message',\n            this._callbackHandlerAdaptor\n        );\n\n        this._callbacks.clear();\n    }\n    \n}\n\nexport default ArtHubBase;","import ArtHubBase from './ArtHubBase.js';\n\nconst BackgroundList = [\n    {id: '01_attic_room_with_windows', name: '01_attic_room_with_windows', url: 'system/backgroundCubes/01_attic_room_with_windows/thumbnail.jpg'},\n    {id: '02_Ferry_To_Stockholm', name: '02_Ferry_To_Stockholm', url: 'system/backgroundCubes/02_Ferry_To_Stockholm/thumbnail.jpg'},\n    {id: '03_HDRI_Sky_1553', name: '03_HDRI_Sky_1553', url: 'system/backgroundCubes/03_HDRI_Sky_1553/thumbnail.jpg'},\n    {id: '04_Empty_Night_Side_Walk_In_Small_Town', name: '04_Empty_Night_Side_Walk_In_Small_Town', url: 'system/backgroundCubes/04_Empty_Night_Side_Walk_In_Small_Town/thumbnail.jpg'},\n    {id: '05_Stairs_At_Church', name: '05_Stairs_At_Church', url: 'system/backgroundCubes/05_Stairs_At_Church/thumbnail.jpg'},\n    {id: '06_The_Interior_Of_The_Romanesque_Rotunda', name: '06_The_Interior_Of_The_Romanesque_Rotunda', url: 'system/backgroundCubes/06_The_Interior_Of_The_Romanesque_Rotunda/thumbnail.jpg'},\n    {id: '07_Wooden_Pier_At_Morning', name: '07_Wooden_Pier_At_Morning', url: 'system/backgroundCubes/07_Wooden_Pier_At_Morning/thumbnail.jpg'},\n    {id: '08_Winter_Night_Hill', name: '08_Winter_Night_Hill', url: 'system/backgroundCubes/08_Winter_Night_Hill/thumbnail.jpg'},\n    {id: '09_Glazed_Patio', name: '09_Glazed_Patio', url: 'system/backgroundCubes/09_Glazed_Patio/thumbnail.jpg'},\n    {id: '10_Small_Waterfall_In_Park', name: '10_Small_Waterfall_In_Park', url: 'system/backgroundCubes/10_Small_Waterfall_In_Park/thumbnail.jpg'},\n    {id: '11_Morning_On_The_SquareIn_Resort_Town', name: '11_Morning_On_The_SquareIn_Resort_Town', url: 'system/backgroundCubes/11_Morning_On_The_SquareIn_Resort_Town/thumbnail.jpg'},\n    {id: '12_Small_Apartment', name: '12_Small_Apartment', url: 'system/backgroundCubes/12_Small_Apartment/thumbnail.jpg'},\n    {id: '13_Abandoned_Sanatorium', name: '13_Abandoned_Sanatorium', url: 'system/backgroundCubes/13_Abandoned_Sanatorium/thumbnail.jpg'},\n    {id: '14_Blue_Hour_At_Pier', name: '14_Blue_Hour_At_Pier', url: 'system/backgroundCubes/14_Blue_Hour_At_Pier/thumbnail.jpg'},\n    {id: '15_Urban_Exploring_Interior', name: '15_Urban_Exploring_Interior', url: 'system/backgroundCubes/15_Urban_Exploring_Interior/thumbnail.jpg'},\n];\n\nconst EnvironmentIntensity = [0, 50];\n\nclass ArtHubEnvironmetalLight extends ArtHubBase{\n    constructor(options) {\n        super(options);\n    }\n\n    _setEnvironment(params) {\n        return this._invokeIFrame('setEnvironmentInfo', params);\n    }\n\n    _getIntensityValueByPercent(percent) {\n        return (EnvironmentIntensity[1] - EnvironmentIntensity[0]) * percent / 100 + EnvironmentIntensity[0];\n    }\n\n    _getPercentByIntensityValue(value) {\n        return (value - EnvironmentIntensity[0]) * 100 / (EnvironmentIntensity[1] - EnvironmentIntensity[0]);\n    }\n\n    _getOrientationValueByPercent(percent) {\n        return  Math.round(360 * percent / 100);\n    }\n\n    _getPercentByOrientationValue(value) {\n        return Math.round(value/360 * 100);\n    }\n    \n    _setBackground(params) {\n        return this._invokeIFrame('setBackground', params);\n    }\n\n    //apis\n    /** \n     * @param\n     * @param {String} environmentName\n     * @param {Number} orientation\n     * @param {Number} intensity\n     * */\n    getEnvironmentInfo() {\n        return this._invokeIFrame('getEnvironmentInfo')\n            .then(res => {\n                res.intensity = this._getPercentByIntensityValue(res.intensity);\n                res.environmentObj = BackgroundList.find(e => e.id === res.environmentName);\n                res.orientation = this._getPercentByOrientationValue(res.orientation);\n                return res;\n            });\n    }\n\n    set environmentName(value) {\n        this._setEnvironment({environmentName: value});\n    }\n\n    set intensity(value) {\n        const intensityValue = this._getIntensityValueByPercent(value);\n        this._setEnvironment({intensity: intensityValue});\n        this._setBackground({lightBrightness: intensityValue});\n    }\n\n    set orientation(value) {\n        const orientValue = this._getOrientationValueByPercent(value);\n        this._setEnvironment({orientation: orientValue});\n    }\n\n    getEnvironmentList() {\n        return this._invokeIFrame('getRootDirectory')\n            .then((rootDirectory) => {\n                const backgroundList = [...BackgroundList];\n                backgroundList.forEach(e => e.url = `${rootDirectory}${e.url}`);\n                return Promise.resolve(backgroundList);\n            });\n    }\n}\n\nexport default ArtHubEnvironmetalLight;","\nexport function color2RGB(color) {\n    var sColor = color.toLowerCase();\n    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n    if (sColor && reg.test(sColor)) {\n        if (sColor.length === 4) {\n            var sColorNew = \"#\";\n            for (var i=1; i<4; i+=1) {\n                sColorNew += sColor.slice(i, i+1).concat(sColor.slice(i, i+1));    \n            }\n            sColor = sColorNew;\n        }\n        var sColorChange = [];\n        for (var i=1; i<7; i+=2) {\n            sColorChange.push(parseInt(\"0x\"+sColor.slice(i, i+2))/255);    \n        }\n        return sColorChange;\n    }\n    return sColor;\n}\n\nexport function RGB2Color(colorObj) {\n    if(!colorObj) return '';\n    const {r, g, b} = colorObj;\n    let color = [r, g, b];\n    let hex = \"#\";\n\n    for (var i = 0; i < 3; i++) {\n        hex += (\"0\" + Math.round(Number(color[i]) * 255).toString(16)).slice(-2);\n    }\n    return hex;\n}\n\nexport function animate({timing, draw, duration}) {\n    let start = performance.now();\n    requestAnimationFrame(function animate(time) {\n      // timeFraction 从 0 增加到 1\n      let timeFraction = (time - start) / duration;\n      if (timeFraction > 1) timeFraction = 1;\n      // 计算当前动画状态\n      let progress = timing(timeFraction);\n      draw(progress); // 绘制\n      if (timeFraction < 1) {\n        requestAnimationFrame(animate);\n      }\n    });\n  }","import { color2RGB, RGB2Color } from './Util.js';\nimport ArtHubBase from './ArtHubBase.js';\n\nconst BackgroundImageList = [\n    {id: 'SYSTEM_DARK_1.jpg', name: '磨砂黑', url: 'system/backgroundImages/SYSTEM_DARK_1.jpg'},\n    {id: 'SYSTEM_DARK_2.jpg', name: '经典黑', url: 'system/backgroundImages/SYSTEM_DARK_2.jpg'},\n    {id: 'SYSTEM_DARK_3.jpg', name: '金属黑', url: 'system/backgroundImages/SYSTEM_DARK_3.jpg'},\n    {id: 'SYSTEM_GRAY_1.jpg', name: '磨砂灰', url: 'system/backgroundImages/SYSTEM_GRAY_1.jpg'},\n    {id: 'SYSTEM_GRAY_2.jpg', name: '经典灰', url: 'system/backgroundImages/SYSTEM_GRAY_2.jpg'},\n    {id: 'SYSTEM_LIGHT_GRAY.jpg', name: '浅灰', url: 'system/backgroundImages/SYSTEM_LIGHT_GRAY.jpg'},\n    {id: 'SYSTEM_METAL.jpg', name: '金属银', url: 'system/backgroundImages/SYSTEM_METAL.jpg'},\n    {id: 'SYSTEM_LIGHT_BLUE.jpg', name: '深蓝', url: 'system/backgroundImages/SYSTEM_LIGHT_BLUE.jpg'},\n];\n\nconst EnvironmentBrightness = [0, 2];\n\nclass ArtHubSkybox  extends ArtHubBase{\n    constructor(options) {\n        super(options);\n    }\n    \n    _setBackground(params) {\n        return this._invokeIFrame('setBackground', params);\n    }\n\n    _getEnvironmentBrightnessValueByPercent(percent) {\n        return (EnvironmentBrightness[1] - EnvironmentBrightness[0]) * percent / 100 + EnvironmentBrightness[0];\n    }\n\n    _getPercentByEnvironmentBrightnessValue(value) {\n        return (value - EnvironmentBrightness[0]) * 100 / (EnvironmentBrightness[1] - EnvironmentBrightness[0]);\n    }\n    \n    // apis\n    /** \n     * @param\n     * @param {String} type: 'SOLIDCOLOR','IMAGE','CUBEMAP',\n     * @param {Object} params\n     * e.g:\n     * {type: 'SOLIDCOLOR', backgroundColor: {r: 1.0, g: 1.0, b: 1.0}}\n     * {type: 'IMAGE', backgroundImage: 'SYSTEM_GRAY_2.jpg'}\n     * {type: 'CUBEMAP', cubeMapName: '01_attic_room_with_windows', lightEnable: false, environmentBlur: 1, environmentBrightness: 0.6}\n     * */\n    getBackgroundInfo() {\n        return this._invokeIFrame('getBackgroundInfo')\n            .then(res => {\n                res.environmentBrightness = this._getPercentByEnvironmentBrightnessValue(res.environmentBrightness);\n                res.backgroundImageObj = BackgroundImageList.find(e => e.id === res.backgroundImage);\n                res.backgroundColor = RGB2Color(res.backgroundColor);\n                return res;\n            })\n    }\n\n    set type(value) {\n        this._setBackground({type: value});\n    }\n    \n    set backgroundColor(value) {\n        const colorArray = color2RGB(value);\n        this._setBackground({backgroundColor: {r: colorArray[0], g: colorArray[1], b: colorArray[2]}});\n    }\n\n    set backgroundImage(value) {\n        this._setBackground({backgroundImage: value});\n    }\n\n    set cubeMapName(value) {\n        this._setBackground({cubeMapName: value});\n    }\n\n    set lightEnable(value) {\n        this._setBackground({lightEnable: value});\n    }\n\n    set environmentBrightness(value) {\n        const brightnessValue = this._getEnvironmentBrightnessValueByPercent(value);\n        this._setBackground({environmentBrightness: brightnessValue});\n    }\n\n    set orientation(value) {\n        const orientValue = Math.round(360 * value / 100);\n        this._setBackground({orientation: orientValue});\n    }\n\n    set environmentBlur(value) {\n        this._setBackground({environmentBlur: value});\n    }\n\n    getBackgroundImageList() {\n        return this._invokeIFrame('getRootDirectory')\n            .then((rootDirectory) => {\n                const imageList = [...BackgroundImageList];\n                imageList.forEach(e => e.url = `${rootDirectory}${e.url}`);\n                return Promise.resolve(imageList);\n            });\n    }\n}\n\nexport default ArtHubSkybox;","import ArtHubBase from './ArtHubBase.js';\n\nclass ArtHubMesh extends ArtHubBase{\n    constructor(options) {\n        super(options);\n    }\n\n    hide() {\n        return this._invokeIFrame('showMesh', {id: this.parentEntityId, visible: false});\n    }\n\n    show() {\n        return this._invokeIFrame('showMesh', {id: this.parentEntityId, visible: true});\n    }\n    getUVData() {\n        return this._invokeIFrame('getMeshUVData', this.id)\n            .then(uvData => {\n                return uvData;\n            })\n    }\n}\n\nexport default ArtHubMesh;\n","import ArtHubBase from './ArtHubBase.js';\nimport { color2RGB, RGB2Color, animate } from './Util.js';\n\nconst additionalDielectricMaterialFields = [\n    'albedoMapName',\n    'metalnessMapName',\n    'specularF0MapName',\n    'roughnessMapName',\n    'glossinessMapName',\n    'normalMapName',\n    'aoMapName',\n    'cavityMapName',\n    'opacityMapName',\n    'emissiveMapName',\n];\n\nconst additionalElectricMaterialFields = [\n    'albedoMapName',\n    'specularMapName',\n    'roughnessMapName',\n    'glossinessMapName',\n    'normalMapName',\n    'aoMapName',\n    'cavityMapName',\n    'opacityMapName',\n    'emissiveMapName',\n];\n\nconst FirstLetterToUpperCase = function(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst allowedChoices = ['dielectric', 'electric'];\n\nconst cullingChoice = {\n    off: 0, // show both side\n    onCCW: 1, // cull back\n    onCW: 2, // cull front\n    onBoth: 3 // cull double side (show nothing)\n};\n\nconst allMapFields = ['albedoMap','specularMap','metalnessMap','specularF0Map','roughnessMap','glossinessMap','normalMap','aoMap','cavityMap','opacityMap','emissiveMap'];\n\nclass ArtHubMaterial  extends ArtHubBase{\n    constructor(options) {\n        super(options);\n        this._type = options.type;\n        this._invokeFunctionField('enableMaterialBasicProperties');\n        this._materialContexts = new Map();\n    }\n\n    init() {\n        return new Promise((rs, rj)=>{\n            let type = this.type;\n            if (this.type === 'compound') {\n                this.activeMaterialType.then(type=>{\n                    this.setMaterialContext(type);\n                    rs();\n                });\n            } else {\n                this.setMaterialContext(type);\n                rs();\n            }\n        });\n    }\n\n    _invokeGetField(field) {\n        return this._invokeFunctionField('get' + FirstLetterToUpperCase(field));\n    }\n\n    _invokeSetField(field, value) {\n        return this._invokeFunctionField('set' + FirstLetterToUpperCase(field), value);\n    }\n\n    _invokeFunctionField(field, value) {\n        return this._invokeIFrame('invokeMaterialField', {field: field, id: this.id, value: value}).catch(e=>console.log(e));\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get materialTypes() {\n        return this._invokeGetField('materialTypes');\n    }\n\n    get activeMaterialType() {\n        return this._invokeGetField('activeMaterialType');\n    }\n\n    set activeMaterialType(value) {\n        this.setMaterialContext(value);\n        return this._invokeSetField('activeMaterialType', value);\n    }\n\n    get culling() {\n        return this._invokeGetField('culling');\n    }\n    set culling(value) {\n        return this._invokeSetField('culling', value); \n    }\n\n    get albedoEnable() { return this._invokeGetField('albedoEnable'); }\n    get albedoColor() { return this._invokeGetField('albedoColor'); }\n    get albedoFactor() { return this._invokeGetField('albedoFactor'); }\n    get albedoMapPath() { return this._invokeGetField('albedoMapPath'); }\n    get albedoMapImage() { return this._invokeGetField('albedoMapImage'); }\n    get specularEnable() { return this._invokeGetField('specularEnable'); }\n    get specularColor() { return this._invokeGetField('specularColor'); }\n    get specularFactor() { return this._invokeGetField('specularFactor'); }\n    get specularMapPath() { return this._invokeGetField('specularMapPath'); }\n    get specularMapImage() { return this._invokeGetField('specularMapImage'); }\n    get metalnessEnable() { return this._invokeGetField('metalnessEnable'); }\n    get metalnessFactor() { return this._invokeGetField('metalnessFactor'); }\n    get metalnessMapPath() { return this._invokeGetField('metalnessMapPath'); }\n    get metalnessMapImage() { return this._invokeGetField('metalnessMapImage'); }\n    get specularF0Enable() { return this._invokeGetField('specularF0Enable'); }\n    get specularF0Factor() { return this._invokeGetField('specularF0Factor'); }\n    get specularF0MapPath() { return this._invokeGetField('specularF0MapPath'); }\n    get specularF0MapImage() { return this._invokeGetField('specularF0MapImage'); }\n    get roughnessEnable() { return this._invokeGetField('roughnessEnable'); }\n    get roughnessFactor() { return this._invokeGetField('roughnessFactor'); }\n    get roughnessMapPath() { return this._invokeGetField('roughnessMapPath'); }\n    get roughnessMapImage() { return this._invokeGetField('roughnessMapImage'); }\n    get glossinessEnable() { return this._invokeGetField('glossinessEnable'); }\n    get glossinessFactor() { return this._invokeGetField('glossinessFactor'); }\n    get glossinessMapPath() { return this._invokeGetField('glossinessMapPath'); }\n    get glossinessMapImage() { return this._invokeGetField('glossinessMapImage'); }\n    get normalEnable() { return this._invokeGetField('normalEnable'); }\n    get normalFactor() { return this._invokeGetField('normalFactor'); }\n    get normalFlipY() { return this._invokeGetField('normalFlipY'); }\n    get normalMapPath() { return this._invokeGetField('normalMapPath'); }\n    get normalMapImage() { return this._invokeGetField('normalMapImage'); }\n    get aoEnable() { return this._invokeGetField('aoEnable'); }\n    get aoFactor() { return this._invokeGetField('aoFactor'); }\n    get aoMapPath() { return this._invokeGetField('aoMapPath'); }\n    get aoMapImage() { return this._invokeGetField('aoMapImage'); }\n    get aoOccludeSpecular() { return this._invokeGetField('aoOccludeSpecular'); }\n    get cavityEnable() { return this._invokeGetField('cavityEnable'); }\n    get cavityFactor() { return this._invokeGetField('cavityFactor'); }\n    get cavityMapPath() { return this._invokeGetField('cavityMapPath'); }\n    get cavityMapImage() { return this._invokeGetField('cavityMapImage'); }\n    get opacityEnable() { return this._invokeGetField('opacityEnable'); }\n    get opacityFactor() { return this._invokeGetField('opacityFactor'); }\n    get opacityMapPath() { return this._invokeGetField('opacityMapPath'); }\n    get opacityMapImage() { return this._invokeGetField('opacityMapImage'); }\n    get opacityAlphaInvert() { return this._invokeGetField('opacityAlphaInvert'); }\n    get emissiveEnable() { return this._invokeGetField('emissiveEnable'); }\n    get emissiveColor() { return this._invokeGetField('emissiveColor'); }\n    get emissiveMapPath() { return this._invokeGetField('emissiveMapPath'); }\n    get emissiveMapImage() { return this._invokeGetField('emissiveMapImage'); }\n    get emissiveFactor() { return this._invokeGetField('emissiveFactor'); }\n\n    set albedoEnable(value) { this._invokeSetField('albedoEnable', value); }\n    set albedoColor(value) { \n        this._invokeSetField('albedoColor', value);\n    }\n    set albedoFactor(value) { value = value / 100;  this._invokeSetField('albedoFactor', value); }\n    set specularEnable(value) { this._invokeSetField('specularEnable', value); }\n    set specularColor(value) { \n        this._invokeSetField('specularColor', value); \n    }\n    set specularFactor(value) { value = value / 100;  this._invokeSetField('specularFactor', value); }\n    set metalnessEnable(value) { this._invokeSetField('metalnessEnable', value); }\n    set metalnessFactor(value) { \n        value = value / 100;  \n        this._invokeSetField('metalnessFactor', value); \n    }\n    set specularF0Enable(value) { this._invokeSetField('specularF0Enable', value); }\n    set specularF0Factor(value) { \n        value = value / 100;  \n        this._invokeSetField('specularF0Factor', value); \n    }\n    set roughnessEnable(value) { this._invokeSetField('roughnessEnable', value); }\n    set roughnessFactor(value) { value = value / 100;  this._invokeSetField('roughnessFactor', value); }\n    set glossinessEnable(value) { this._invokeSetField('glossinessEnable', value); }\n    set glossinessFactor(value) { value = value / 100;  this._invokeSetField('glossinessFactor', value); }\n    set normalEnable(value) { this._invokeSetField('normalEnable', value); }\n    set normalFactor(value) { value = value / 100;  this._invokeSetField('normalFactor', value); }\n    set normalFlipY(value) { this._invokeSetField('normalFlipY', value); }\n    set aoEnable(value) { this._invokeSetField('aoEnable', value); }\n    set aoFactor(value) { value = value / 100;  this._invokeSetField('aoFactor', value); }\n    set aoOccludeSpecular(value) { this._invokeSetField('aoOccludeSpecular', value); }\n    set cavityEnable(value) { this._invokeSetField('cavityEnable', value); }\n    set cavityFactor(value) { value = value / 100;  this._invokeSetField('cavityFactor', value); }\n    set opacityEnable(value) { this._invokeSetField('opacityEnable', value); }\n    set opacityFactor(value) { value = value / 100;  this._invokeSetField('opacityFactor', value); }\n    set opacityAlphaInvert(value) { this._invokeSetField('opacityAlphaInvert', value); }\n    set emissiveEnable(value) { this._invokeSetField('emissiveEnable', value); }\n    set emissiveColor(value) { this._invokeSetField('emissiveColor', value); }\n    set emissiveFactor(value) { this._invokeSetField('emissiveFactor', value); }\n\n    get highlightMaskEnable() { return this._invokeGetField('highlightMaskEnable'); }\n    set highlightMaskEnable(value) { this._invokeSetField('highlightMaskEnable', value); }\n    get highlightMaskColor() { return this._invokeGetField('highlightMaskColor'); }\n    set highlightMaskColor(value) { this._invokeSetField('highlightMaskColor', value); }\n    get highlightMaskAlpha() { return this._invokeGetField('highlightMaskAlpha'); }\n    set highlightMaskAlpha(value) { this._invokeSetField('highlightMaskAlpha', value); }\n\n    set albedoMapPath(value) { this._invokeSetField('albedoMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.albedoMapName = name[0]); }\n    set specularMapPath(value) { this._invokeSetField('specularMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.specularMapName = name[0]);    }\n    set metalnessMapPath(value) { this._invokeSetField('metalnessMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.metalnessMapName = name[0]); }\n    set specularF0MapPath(value) { this._invokeSetField('specularF0MapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.specularF0MapName = name[0]); }\n    set roughnessMapPath(value) { this._invokeSetField('roughnessMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.roughnessMapName = name[0]); }\n    set glossinessMapPath(value) { this._invokeSetField('roughnessMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.glossinessMapName = name[0]); }\n    set normalMapPath(value) { this._invokeSetField('normalMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.normalMapName = name[0]); }\n    set aoMapPath(value) { this._invokeSetField('aoMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.aoMapName = name[0]); }\n    set cavityMapPath(value) { this._invokeSetField('cavityMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.cavityMapName = name[0]); }\n    set opacityMapPath(value) { this._invokeSetField('opacityMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.opacityMapName = name[0]); }\n    set emissiveMapPath(value) { this._invokeSetField('emissiveMapPath', value); this._invokeIFrame('getTextureName', [value]).then(name=>this.emissiveMapName = name[0]); }\n\n    set albedoMapImage(value) { this._invokeSetField('albedoMapImage', value); }\n    set specularMapImage(value) { this._invokeSetField('specularMapImage', value); }\n    set metalnessMapImage(value) { this._invokeSetField('metalnessMapImage', value); }\n    set specularF0MapImage(value) { this._invokeSetField('specularF0MapImage', value); }\n    set roughnessMapImage(value) { this._invokeSetField('roughnessMapImage', value); }\n    set glossinessMapImage(value) { this._invokeSetField('roughnessMapImage', value); }\n    set normalMapImage(value) { this._invokeSetField('normalMapImage', value); }\n    set aoMapImage(value) { this._invokeSetField('aoMapImage', value); }\n    set cavityMapImage(value) { this._invokeSetField('cavityMapImage', value); }\n    set opacityMapImage(value) { this._invokeSetField('opacityMapImage', value); }\n    set emissiveMapImage(value) { this._invokeSetField('emissiveMapImage', value); }\n\n    setAlbedoMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.albedoMapName = name[0]), this._invokeFunctionField('setAlbedoMapPath', value)]); }\n    setSpecularMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.specularMapName = name[0]), this._invokeFunctionField('setSpecularMapPath', value)]); }\n    setMetalnessMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.metalnessMapName = name[0]), this._invokeFunctionField('setMetalnessMapPath', value)]); }\n    setSpecularF0MapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.specularF0MapName = name[0]), this._invokeFunctionField('setSpecularF0MapPath', value)]); }\n    setRoughnessMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.roughnessMapName = name[0]), this._invokeFunctionField('setRoughnessMapPath', value)]); }\n    setGlossinessMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.glossinessMapName = name[0]), this._invokeFunctionField('setGlossinessMapPath', value)]); }\n    setNormalMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.normalMapName = name[0]), this._invokeFunctionField('setNormalMapPath', value)]); }\n    setAoMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.aoMapName = name[0]), this._invokeFunctionField('setAoMapPath', value)]); }\n    setCavityMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.cavityMapName = name[0]), this._invokeFunctionField('setCavityMapPath', value)]); }\n    setOpacityMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.opacityMapName = name[0]), this._invokeFunctionField('setOpacityMapPath', value)]); }\n    setEmissiveMapPath(value) { return Promise.all([this._invokeIFrame('getTextureName', [value]).then(name=>this.emissiveMapName = name[0]), this._invokeFunctionField('setEmissiveMapPath', value)]); }\n\n    setAlbedoMapImage(value) { return this._invokeFunctionField('setAlbedoMapImage', value); }\n    setSpecularMapImage(value) { return this._invokeFunctionField('setSpecularMapImage', value); }\n    setMetalnessMapImage(value) { return this._invokeFunctionField('setMetalnessMapImage', value); }\n    setSpecularF0MapImage(value) { return this._invokeFunctionField('setSpecularF0MapImage', value); }\n    setRoughnessMapImage(value) { return this._invokeFunctionField('setRoughnessMapImage', value); }\n    setGlossinessMapImage(value) { return this._invokeFunctionField('setGlossinessMapImage', value); }\n    setNormalMapImage(value) { return this._invokeFunctionField('setNormalMapImage', value); }\n    setAoMapImage(value) { return this._invokeFunctionField('setAoMapImage', value); }\n    setCavityMapImage(value) { return this._invokeFunctionField('setCavityMapImage', value); }\n    setOpacityMapImage(value) { return this._invokeFunctionField('setOpacityMapImage', value); }\n    setEmissiveMapImage(value) { return this._invokeFunctionField('setEmissiveMapImage', value); }\n\n    setMaterialContext(typeName) {\n        if (!this._materialContexts.get(typeName)) {\n            this._materialContexts.set(typeName, {});\n        }\n        this._activeContext = this._materialContexts.get(typeName);\n    }\n    // name getter\n    get albedoMapName() { return this._activeContext._albedoMapName; }\n    get specularMapName() { return this._activeContext._specularMapName; }\n    get metalnessMapName() { return this._activeContext._metalnessMapName; }\n    get specularF0MapName() { return this._activeContext._specularF0MapName; }\n    get roughnessMapName() { return this._activeContext._roughnessMapName; }\n    get glossinessMapName() { return this._activeContext._roughnessMapName; }\n    get normalMapName() { return this._activeContext._normalMapName; }\n    get aoMapName() { return this._activeContext._aoMapName; }\n    get cavityMapName() { return this._activeContext._cavityMapName; }\n    get opacityMapName() { return this._activeContext._opacityMapName; }\n    get emissiveMapName() { return this._activeContext._emissiveMapName; }\n    // name setter\n    set albedoMapName(value) { this._activeContext._albedoMapName = value; }\n    set specularMapName(value) { this._activeContext._specularMapName = value; }\n    set metalnessMapName(value) { this._activeContext._metalnessMapName = value; }\n    set specularF0MapName(value) { this._activeContext._specularF0MapName = value; }\n    set roughnessMapName(value) { this._activeContext._roughnessMapName = value; }\n    set glossinessMapName(value) { this._activeContext._roughnessMapName = value; }\n    set normalMapName(value) { this._activeContext._normalMapName = value; }\n    set aoMapName(value) { this._activeContext._aoMapName = value; }\n    set cavityMapName(value) { this._activeContext._cavityMapName = value; }\n    set opacityMapName(value) { this._activeContext._opacityMapName = value; }\n    set emissiveMapName(value) { this._activeContext._emissiveMapName = value; }\n\n    getMaterialInfo(type) {\n        return this._invokeFunctionField('getHelperMaterialInfo', type).then(info=>{\n            return this.updateNames(info).then(()=>{\n                this._appendAdditionalFieldsToInfo(info);\n                return info;\n            });\n        });\n    }\n    get activeMaterialInfo() {\n        return this.activeMaterialType.then(type=>this.getMaterialInfo(type));\n    }\n    get info() {\n        return this._invokeGetField('helperInfo').then(info=>{\n            return this.updateNames(info.materialInfo).then(()=>{\n                this._appendAdditionalFieldsToInfo(info.materialInfo);\n                return info;\n            });\n        });\n    }\n\n    _appendAdditionalFieldsToInfo(info) {\n        if (info.type === 'electric') {\n            additionalElectricMaterialFields.forEach(field=>info[field] = this[field]);\n        } else if (info.type === 'dielectric') {\n            additionalDielectricMaterialFields.forEach(field=>info[field] = this[field]);\n        }\n    }\n\n    updateNames(materialInfo) {\n        var fieldsTable = new Map();\n        var appendFields = function(key, field) {\n            let callbacks = fieldsTable.get(key);\n            if (callbacks) {\n                callbacks.push(field);\n            } else {\n                fieldsTable.set(key, [field]);\n            }\n        }\n        // append fields\n        allMapFields.forEach(field=>{\n            if (materialInfo[`${field}Path`] && !this[`${field}Name`]) { appendFields( materialInfo[`${field}Path`], `${field}Name`); };\n        })\n        let pathes = [];\n        fieldsTable.forEach((value, key)=>{\n            pathes.push(key);\n        });\n        // update fields\n        return this._invokeIFrame('getTextureName', pathes).then(result=>{\n            for(let i = 0;i<pathes.length;++i) {\n                fieldsTable.get(pathes[i]).forEach(field=>{\n                    this[field] = result[i];\n                })\n            }\n        });\n    }\n\n    getInfo() {\n        return Promise.resolve(this.info);\n    }\n\n    setActiveMaterialType(type) {\n        this.activeMaterialType = type;\n    }\n\n    triggerHighlightMask(duration = 2500, startFraction = 0.9, startValue = 0.6) {\n        this.highlightMaskEnable = true;\n        var that = this;\n        animate({\n            duration: duration,\n            timing(timeFraction) {\n                let x = Math.min(Math.max(0.0, startFraction), 1.0 - 0.000001);\n                let y = 1.0 - Math.min(Math.max(0.0, startValue), 1.0);\n                if (timeFraction < x) {\n                    return y;\n                } else {\n                    let a = (y-1) / (x-1);\n                    return (timeFraction - 1) * a + 1;\n                }\n            },\n            draw(progress) {\n                that.highlightMaskAlpha = 1.0 - progress;\n            }\n        });\n    }\n\n    getTextureLinkByPath(path) {\n        var that = this;\n        var extractTextureLinkFromInfo = function(info) {\n            var matchedFields = [];\n            allMapFields.forEach(field=>{\n                if (info[`${field}Path`] === path) {\n                    matchedFields.push({id: that.id, type: info.type, map: field});\n                }\n            });\n            return matchedFields;\n        };\n\n        if (this.type !== 'compound') {\n            return this.getMaterialInfo().then(info=>extractTextureLinkFromInfo(info));\n        } else {\n            return this.materialTypes.then(types=>{\n                let promises = types.map(type=>this.getMaterialInfo(type).then(info=>extractTextureLinkFromInfo(info)));\n                return Promise.all(promises);\n            }).then(values=>{\n                var ret = [];\n                values.forEach(value=>{ret = ret.concat(value);});\n                return ret;\n            });\n        }\n    }\n}\n\nexport default ArtHubMaterial;","import ArtHubBase from './ArtHubBase.js';\n\nclass ArtHubKeyframeAnimation extends ArtHubBase{\n    constructor(options) {\n        super(options);\n    }\n\n    get id() {\n        return this._name;\n    }\n}\n\nexport default ArtHubKeyframeAnimation;","import ArtHubMesh from './ArtHubMesh.js';\nimport ArtHubMaterial from './ArtHubMaterial.js';\nimport ArtHubKeyframeAnimation from './ArtHubKeyframeAnimation.js';\nimport ArtHubBase from './ArtHubBase.js';\n\nclass ArtHubModel extends ArtHubBase{\n    constructor(options) {\n        super(options);\n\n        this._meshList = [];\n        this._materialList = [];\n        this._animationClips = [];\n    }\n\n    getModelStructure() {\n        return this._invokeIFrame('getModelStructure', this.id)\n            .then(modelInfo => {\n\n                const meshList = modelInfo.mesh;\n                this._meshList = meshList.map(e => new ArtHubMesh({iframe: this._iframe, ...e}));\n                const materials = modelInfo.material;\n                this._materialList = materials.map(e => new ArtHubMaterial({iframe: this._iframe, ...e}));\n                const clips = modelInfo.animationClips;\n                this._animationClips = clips.map(e => new ArtHubKeyframeAnimation({iframe: this._iframe, ...e}));\n\n                return Promise.all(this._materialList.map(v=>v.init())).then(()=>{\n                    return {\n                        name: this.name,\n                        id: this.id,\n                        ...modelInfo\n                    }\n                });\n            });\n    }\n\n    getMeshById(id) {\n        let index = this._meshList.findIndex(e => e.id === id);\n        const mesh = index !== -1 ? this._meshList[index] : null;\n        return Promise.resolve(mesh);\n    }\n\n    getMaterialById(id) {\n        let index = this._materialList.findIndex(e => e.id === id);\n        const material = index !== -1 ? this._materialList[index] : null;\n        return Promise.resolve(material);\n    }\n\n    getMaterialByIndex(index) {\n        const material = index >= 0 && index < this._materialList.length ? this._materialList[index] : null;\n        return material;\n    }\n\n    getAnimationClipById(id) {\n        let index = this._animationClips.findIndex(e => e.id === id);\n        const clip = index !== -1 ? this._animationClips[index] : null;\n        return Promise.resolve(clip);\n    }\n\n    getMeshList() {\n        return Promise.resolve(this._meshList);\n    }\n\n    getMaterialList() {\n        return Promise.resolve(this._materialList);\n    }\n\n    getAnimationClips() {\n        return Promise.resolve(this._animationClips);\n    }\n\n    deleteAnimationClipById(clipId) {\n        return this._invokeIFrame('deleteAnimationClipById', clipId)\n            .then(() => {\n                let index = this._animationClips.findIndex(e => e.id === clipId);\n                if(index !== -1) {\n                    this._animationClips.splice(index, 1);\n                }\n                return true;\n            })\n    }\n\n    getTextureLinkByPath(path) {\n        var promises = this._materialList.map(material=>material.getTextureLinkByPath(path));\n        return Promise.all(promises).then(values=>{\n            var ret = [];\n            values.forEach(value=>{ret = ret.concat(value);});\n            return ret;\n        });\n    }\n\n    // load newModel\n    // animation append to currentModel\n    // delete newModel\n    // params: loadParams\n    // WIP: 还未完成请不要用它\n    addAnimationClips(modelInfo) {\n        // get current state.\n        var s = this._model.getScene();\n        var root = s.getModelRoot();\n        var animatorComponent = root.getComponent('animator');\n        var onAnimationLoaded = function() {\n            // new data loaded.\n            var newRoot = s.getModelRoot();\n            // move clips to old root.\n            var newAnimatorComponent = newRoot.getComponent('animator');\n            // new clips is now empty, and it's ok to destroy\n            var clips = newAnimatorComponent.takeoutClips();\n            clips.forEach(clip=>animatorComponent.setAnimationClip(clip.getName(), clip));\n            // set root to old root and clear new data.\n            this._invokeIFrame('deleteModelByUniqueId', new_root);\n            s.setModelRoot(root);\n        };\n        // set loaded callback\n        this.addCallback(MessageType.FileLoaded, (param) => {\n            if (param.count == param.total)\n                onAnimationLoaded();\n        });\n        // begin to load\n        this._invokeIFrame('load', modelInfo);\n    }\n}\n\nexport default ArtHubModel;","import ArtHubEnvironmetalLight from './ArtHubEnvironmetalLight.js';\nimport ArtHubSkybox from './ArtHubSkybox.js';\nimport ArtHubModel from './ArtHubModel.js';\nimport ArtHubBase from './ArtHubBase.js';\nconst MessageType = {\n    StructureLoaded: 'structureLoaded',\n};\n\nclass ArtHubScene extends ArtHubBase{\n    constructor(options) {\n        super(options);\n\n        this.init();\n    }\n\n    init() {\n        this._environmentalLight = new ArtHubEnvironmetalLight({iframe: this._iframe});\n        this._skybox = new ArtHubSkybox({iframe: this._iframe});\n        this._modelList = [];\n\n        this.addEventHandler();\n    }\n\n    destroy() {\n        this.removeEventHandler();\n    }\n\n    \n    loadModel(modelInfo) {\n        return new Promise((resolve, reject) => {\n            this._invokeIFrame('load', modelInfo);\n            this.addCallback(MessageType.StructureLoaded, () => {\n                this.removeCallback(MessageType.StructureLoaded);\n                this.setModelList();\n                resolve(true);\n            });\n        });\n    }\n\n    unloadModel(model) {\n        return this._invokeIFrame('deleteCurrentModel');\n    }\n\n    setModelList() {\n        return this._invokeIFrame('getModels')\n            .then(models => {\n                this._modelList = [];\n                models.forEach(e => {\n                    const model = new ArtHubModel({iframe: this._iframe, ...e});\n                    this._modelList.push(model);\n                });\n                return this._modelList;\n            });\n    }\n\n    getEnvironmentalLight() {\n        return Promise.resolve(this._environmentalLight);\n    }\n\n    getSkybox() {\n        return Promise.resolve(this._skybox);\n    }\n\n    getModelList() {\n        return Promise.resolve(this._modelList);\n    }\n\n    getModelById(id) {\n        let index = this._modelList.findIndex(e => e.id === id);\n        const model = index !== -1 ? this._modelList[index] : null;\n        return model;\n    }\n\n    //params: uniqueId\n    deleteModelByUniqueId(id) {\n        return this._invokeIFrame('deleteModelByUniqueId', id)\n            .then(() => {\n                let index = this._modelList.findIndex(e => e.id === id);\n                if(index === -1) return false;\n                this._modelList.splice(index, 1);\n            });\n    }\n\n    getTextureList() {\n        return this._invokeIFrame('getTextureList').then(textureList=>{\n            var pathes = []\n            textureList.forEach(textureInfo=>{\n                // image, path\n                pathes.push(textureInfo.path);\n            })\n            return this._invokeIFrame('getTextureName', pathes).then(textureNames=>{\n                for(let i = 0;i<pathes.length;++i) {\n                    textureList[i].name = textureNames[i];\n                }\n                return textureList;\n            });\n        });\n    }\n\n    getTextureLinkByPath(path) {\n        return this.getModelList().then(models=>{\n            var promises = models.map(model=>model.getTextureLinkByPath(path));\n            return Promise.all(promises).then(values=>{\n                var ret = [];\n                values.forEach(value=>{ret = ret.concat(value);});\n                return ret;\n            });\n        });\n    }\n\n    removeTextureByPath(path) {\n        return this._invokeIFrame('removeTextureByPath', path);\n    }\n\n    clearTextureList() {\n        return this._invokeIFrame('clearTextureList');\n    }\n\n    // load newModel\n    // animation append to newModel\n    // delete oldModel\n    // params: same as load\n    // WIP: 还未完成请不要用它\n    replaceModel() {\n        // get current state.\n        var s = this._model.getScene();\n        var root = s.getModelRoot();\n        var animatorComponent = root.getComponent('animator');\n        var onAnimationLoaded = function() {\n            // new data loaded.\n            var newRoot = s.getModelRoot();\n            var newAnimatorComponent = newRoot.getComponent('animator');\n            // move clips to new root.\n            var clips = animatorComponent.takeoutClips();\n            // old clips is now empty, and it's ok to destroy\n            clips.forEach(clip=>newAnimatorComponent.setAnimationClip(clip.getName(), clip));\n            // clear old data.\n            this._invokeIFrame('deleteModelByUniqueId', new_root);\n            s.setModelRoot(newRoot);\n        };\n        // set loaded callback\n\n        // begin to load\n        this._invokeIFrame('load', modelInfo);\n    }\n\n}\n\nexport default ArtHubScene;","import { color2RGB, RGB2Color } from './Util.js';\nimport ArtHubBase from './ArtHubBase.js';\n\nconst RenderModeList = [\n    { id: 0, name: '正常' },\n    { id: 1, name: '基色' },\n    { id: 2, name: '法线' },\n    { id: 3, name: '光照' },\n    { id: 4, name: '金属' },\n];\n\nconst SkeletonSale = [0.1, 10];\n\nclass ArtHubRenderer extends ArtHubBase{\n    constructor(options) {\n        super(options);\n    }\n\n    _getScaleByPercent(percent) {\n        return (SkeletonSale[1] - SkeletonSale[0]) * percent / 100 + SkeletonSale[0];\n    }\n\n    _getPercentByScale(scale) {\n        return (scale - SkeletonSale[0]) * 100 / (SkeletonSale[1] - SkeletonSale[0]);\n    }\n    // apis\n    showTopology(flag) {\n        return this._invokeIFrame('showTopology', flag);\n    }\n\n    setTopologyColor(color) {\n        const colorArray = Array.isArray(color) ? color : color2RGB(color);\n        return this._invokeIFrame('setTopologyColor', colorArray);\n    }\n\n    setTopologyAlpha(alpha) {\n        const showTopology = alpha > 0;\n        this.showTopology(showTopology);\n        return this._invokeIFrame('setTopologyAlpha', alpha / 100);\n    }\n\n    getTopologyColor() {\n        return this._invokeIFrame('getTopologyColor');\n    }\n\n    getTopologyAlpha() {\n        return this._invokeIFrame('getTopologyAlpha');\n    }\n\n    showTPose(flag) {\n        return this._invokeIFrame('showTPose', flag);\n    }\n\n    showSkeleton(flag) {\n        return this._invokeIFrame('showSkeleton', flag);\n    }\n\n    set skeletonScale(percent) {\n        const scaleValue = this._getScaleByPercent(percent);\n        return this._invokeIFrame('setSkeletonScale', scaleValue);\n    }\n\n    setSkeletonScale(value) {\n        return this._invokeIFrame('setSkeletonScale', value);\n    }\n\n    getSkeletonScale() {\n        return this._invokeIFrame('getSkeletonScale');\n    }\n\n    changeRenderMode(mode) {\n        return this._invokeIFrame('changeRenderMode', mode);\n    }\n\n    getRendererInfo() {\n        return this._invokeIFrame('getRendererInfo')\n            .then(res => {\n                res.renderModeObj = RenderModeList.find(e => e.id === res.renderMode);\n                res.wireframeColor = RGB2Color(res.wireframeColor);\n                res.wireframeOpacity = res.wireframeEnable ? Math.round(res.wireframeOpacity * 100) : 0;\n                res.skelentorScale = this._getPercentByScale(res.skelentorScale);\n                return res;\n            });\n    }\n}\n\nexport default ArtHubRenderer;","\nimport ArtHubScene from './ArtHubScene.js';\nimport ArtHubRenderer from './ArtHubRenderer.js';\nimport ArtHubBase from './ArtHubBase.js';\n\nconst MessageType = {\n    Inited: 'inited',\n    Loaded: \"loaded\",\n    MaterialLoaded: 'materialLoaded'\n};\n\nwindow.invokeID = 1;\nclass ArtHub3DViewer extends ArtHubBase {\n    constructor(options) {\n        super();\n        const {container, baseUrl} = options;\n        this._container = container;\n        this._baseUrl = baseUrl || this._getBaseURL();\n\n    }\n\n    _getIframeSrc() {\n        let baseURL = this._baseUrl;\n        return `//${baseURL}/_ArtHub3DViewer/arthub-3d-viewer-iframe.html`;\n    }\n\n    _getBaseURL() {\n        let pathName = window.location.pathname;\n        if (pathName.startsWith('/')) {\n            pathName = pathName.slice(1);\n        }\n        if (pathName.endsWith('/')) {\n            pathName = pathName.slice(0, pathName.length - 1);\n        }\n        const pathArr = pathName ? pathName.split('/') : [];\n        const depotName = pathArr.length >= 0 ? pathArr[0] : '';\n        let baseURL = depotName ? `${window.location.host}/${depotName}/gas` : `${window.location.host}`;   \n        return baseURL;\n    }\n\n    _createIframe() {\n        const iframe = document.createElement('iframe');\n        iframe.id = 'arthub-3d-viewer';\n        iframe.style.borderWidth = '0px';\n        iframe.style.width = '100%';\n        iframe.style.height = '100%';\n        return iframe;\n    }\n\n    // apis\n    init() {\n        this._iframe = this._createIframe();\n        if (this._container) {\n            this._container.appendChild(this._iframe);\n        }\n        this.addEventHandler();\n    }\n\n    destroy() {\n        if (this._container && this._iframe) {\n            this._container.removeChild(this._iframe);\n            this._iframe = null;\n            this._container = null;\n\n            this.removeEventHandler();\n        }\n    }\n    \n    initEngine(isSaveEnabled = false) {\n        return new Promise((resolve, reject) => {\n\n            this._iframe.src = this._getIframeSrc();\n    \n            this.addCallback(MessageType.Inited, (success) => {\n                this.removeCallback(MessageType.Inited);\n                if (success) {\n                    this._renderer = new ArtHubRenderer({iframe: this._iframe});\n                    if(isSaveEnabled) {\n                        this.initIncrementalSaver();\n                    }\n                    resolve(true);\n                } else {\n                    reject(false);\n                }\n            });\n\n            // this.addCallback(MessageType.MaterialLoaded, (matId) => {\n            //     console.log(`material id: ${matId} loaded now.`);\n            // });\n        })\n    }\n\n    destroyEngine() {\n        return this._invokeIFrame('destroyEngine');\n    }\n\n    createScene() {\n        return this._invokeIFrame('createScene')\n            .then(() => {\n                this._scene = new ArtHubScene({iframe: this._iframe});\n                return this._scene;\n            });\n    }\n\n    //TODO: iframe传scene.id\n    destroyScene(scene) {\n        return this._invokeIFrame('destroyScene');\n    }\n\n    getScene() {\n        return Promise.resolve(this._scene);\n    }\n\n    getRenderer() {\n        return Promise.resolve(this._renderer);\n    }\n\n    // shot and gifCapture\n    shot(options) {\n        return this._invokeIFrame('shot', options);\n    }\n\n    captureGifStart() {\n        return this._invokeIFrame('captureGifStart');\n    }\n\n    captureGifStop() {\n        return this._invokeIFrame('captureGifStop');\n    }\n\n    setAnimationLoopMode(options) {\n        return this._invokeIFrame('setAnimationLoopMode', options);\n    }\n\n    setSpeedFactor(options) {\n        return this._invokeIFrame('setSpeedFactor', options);\n    }\n\n    setClipClamp(options) {\n        return this._invokeIFrame('setClipClamp', options);\n    }\n\n    getAnimationClips() {\n        return this._invokeIFrame('getAnimationClips');\n    }\n\n    enableAnimation(options) {\n        return this._invokeIFrame('enableAnimation', options);\n    }\n\n    setClipIndex(options) {\n        return this._invokeIFrame('setClipIndex', options);\n    }\n\n    setClipProgress(options) {\n        return this._invokeIFrame('setClipProgress', options);\n    }\n\n    enableHotspotAdd(options) {\n        return this._invokeIFrame('enableHotspotAdd', options);\n    }\n\n    deleteHotspot(options) {\n        return this._invokeIFrame('deleteHotspot', options);\n    }\n\n    getHotspots() {\n        return this._invokeIFrame('getHotspots');\n    }\n\n    getAssembleConfigurations() {\n        return this._invokeIFrame('getAssembleConfigurations');\n    }\n\n    initIncrementalSaver() {\n        return this._invokeIFrame('initIncrementalSaver');\n    }\n\n    saverApplyChange() {\n        return this._invokeIFrame('saverApplyChange')\n            .then(res => {\n                if(res.state) {\n                    return true;\n                } else {\n                    throw new Error(res.message);\n                }\n            })\n    }\n\n\n}\n\nif(window.ArtHubWebSDK) {\n    window.ArtHubWebSDK.ModelViewer = ArtHub3DViewer;\n} else {\n    window.ArtHubWebSDK = {\n        ModelViewer: ArtHub3DViewer\n    };\n}\nexport default ArtHub3DViewer;","import ArtHub3DViewer from './ArtHub3DViewer.js';\n\nexport default {ArtHub3DViewer};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(307);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}